apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "shibboleth-proxy.fullname" . }}
  labels:
    {{- include "shibboleth-proxy.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "shibboleth-proxy.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "shibboleth-proxy.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: https
              containerPort: 443
              protocol: TCP
          #livenessProbe:
          #  httpGet:
          #     path: /Shibboleth.sso/Status
          #     port: 443
          #     scheme: HTTP
          #     httpHeaders:
          #       - name: Host
          #         value: "{{ .Values.name  }}"
          #     initialDelaySeconds: 1
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: SERVERNAME
              value: "{{ .Values.nginx.name }}"
            - name: REMOTE
              value: "{{ .Values.nginx.remote }}"
          volumeMounts:
            - name: "config"
              mountPath: "/etc/shibboleth/shibboleth2.xml"
              subPath: "shibboleth2.xml"
            - name: "map"
              mountPath: "/etc/shibboleth/attribute-map.xml"
              subPath: "attribute-map.xml"
            {{- range $name, $val := $.Values.shib.extra_data }}
            - name: {{ $val.name | quote }}
              mountPath: {{ $val.volume | quote }}
            {{- end }}
      volumes:
        - name: "config"
          configMap:
            name: "{{ .Values.shib.config }}"
        - name: "map"
          configMap:
            name: "{{ .Values.shib.map }}"
        {{- range $name, $val := $.Values.shib.extra_data }}
        - name: {{ $val.name | quote }}
          configMap:
            name: {{ $val.name | quote }}
        {{- end }}

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
