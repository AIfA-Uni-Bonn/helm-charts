apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    {{- include "overleaf.labels" . | nindent 4 }}
  name: redis-{{ include "overleaf.fullname" . }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "overleaf.selectorLabels" . | nindent 6 }}
      app.overleaf.service: redis-{{ include "overleaf.fullname" . }}
  strategy:
    type: Recreate
  template:
    metadata:
      {{- with .Values.mongo.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      creationTimestamp: null
      labels:
        {{- include "overleaf.selectorLabels" . | nindent 8 }}
        {{- include "overleaf.network" . | nindent 8 }}
        app.overleaf.service: redis-{{ include "overleaf.fullname" . }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      nodeName: {{ .Values.mongo.nodeName }}
      containers:
      - image: {{ .Values.redis.image.name }}:{{ .Values.redis.image.tag }}
        imagePullPolicy: {{ .Values.redis.image.pullPolicy }}
        name: redis
        ports:
        - containerPort: 6379
        resources: {}
        {{ if .Values.redis.volumes.name }}
        volumeMounts:
        - mountPath: /data
          name: redis-data-volume
	{{ end }}
      restartPolicy: Always
      serviceAccountName: ""
      {{ if .Values.redis.volumes.name }}
      volumes:
      - name: redis-data-volume
        persistentVolumeClaim:
          claimName: redis-claim0
      {{ end }}

status: {}
